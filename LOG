
~/IPLFCPA/_build ~/IPLFCPA
-- Configuring done
-- Generating done
-- Build files have been written to: /home/aditi/IPLFCPA/_build
Scanning dependencies of target VascoLfcpaPass
[ 50%] Building CXX object VascoLfcpaPass/CMakeFiles/VascoLfcpaPass.dir/lfcpa.cpp.o
[100%] Linking CXX shared module libVascoLfcpaPass.so
[100%] Built target VascoLfcpaPass
~/IPLFCPA

 Splitting the BB...............
 Applying SLIM modeling..............#
 ****Ignored: Return Value is Null
   ret void


 Instr is a call instruction.........
 callFLag= 1







 Printing Global Instruction List.....#
 Index: 1	 Lhs: <x, 1 > 		 Rhs: <u, 0>
 Index: 2	 Lhs: <x, 1 > 		 Rhs: <v, 0>
 Index: 3 Rhs: <_Z3funv, 1>
 Index: 4	 Lhs: <i1, 1 > 		 Rhs: <x, 1>
 Index: 5	 Lhs: <y, 1 > 		 Rhs: <i1, 1>
 Index: 6 Rhs: <y, 1>

 Executing VASCO........
 Inside getBoundaryInformationForward 
 Inside getBoundaryInformationBackward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getBoundaryInformationForward 
 Inside getBoundaryInformationBackward 
 Inside EqualDataFlowValuesBackward.................
 Inside getInitialisationValueBackward 
 Inside performMeetBackward...................{  }
 Inside EqualDataFlowValuesBackward.................
 Inside getInitialisationValueBackward 
 Inside performMeetBackward...................{  }
 Backwards Index: 2
 Backwards Index: 3{  }
 Inside computeInFromOut...................
 Rhs in loop: <y, 1>
 Inside fetchLhsIndex............. 
 Instr is a USE. 
 Instr is a return stmt. { y,  }{ y,  }
 Inside computeInFromOut...................
 Fetched LHS: y lhs indir: 1
 Rhs in loop: <i1, 1>
 Inside fetchLhsIndex............. 
 Inside compareToken....{ i1,  }{ i1,  }
 Inside computeInFromOut...................
 Fetched LHS: i1 lhs indir: 1
 Rhs in loop: <x, 1>
 Inside fetchLhsIndex............. 
 Inside compareToken....
 Inside compareToken....{ x,  }
 Inside CallInflowFunction...............
 Inside getInitialisationValueForward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Backwards Index: 1{ x,  }
 Inside computeInFromOut...................
 Fetched LHS: x lhs indir: 1
 Rhs in loop: <u, 0>
 Inside fetchLhsIndex............. 
 Inside compareToken....{  }
 Inside EqualDataFlowValuesBackward.................
 Inside getPurelyGlobalComponentBackward...............
 Forward Index: 1
 Index = 1
 Inside computeOutFromIn......................
 LHS in loop = x indir= 1
 Rhs in loop: <u, 0>
 Normal instruction. 
 Inside restrictByLivness().......
 Inside compareToken....
 Inside forwardMerge.................
 Printing forward values: { (x, )->((u, ) , ) }
 ----------------------------------{ (x, )->((u, ) , ) }
 Index = 1
 Inside computeOutFromIn......................
 LHS in loop = x indir= 1
 Rhs in loop: <u, 0>
 Normal instruction. 
 Inside restrictByLivness().......
 Inside compareToken....
 Inside forwardMerge.................
 Printing forward values: { (x, )->((u, ) , ) }
 ----------------------------------{ (x, )->((u, ) , ) }{ (x, )->((u, ) , ) }
 Inside EqualDataFlowValuesForward...............................
 Inside getPurelyGlobalComponentForward...........
 Forward Index: 2
 Forward Index: 3
 Inside computeOutFromIn......................
 LHS in loop = x indir= 1
 Rhs in loop: <v, 0>
 Normal instruction. 
 Inside restrictByLivness().......
 Inside forwardMerge.................
 Printing forward values: 
 ----------------------------------
 Inside CallInflowFunction...............
 Inside EqualDataFlowValuesForward...............................
 Inside EqualDataFlowValuesBackward.................
 Inside getInitialisationValueForward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueBackward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Inside getInitialisationValueForward 
 Forward Index: 1
 Index = 1
 Inside computeOutFromIn......................
 LHS in loop = x indir= 1
 Rhs in loop: <u, 0>
 Normal instruction. 
 Inside restrictByLivness().......
 Inside forwardMerge.................
 Printing forward values: 
 ----------------------------------
 Index = 1
 Inside computeOutFromIn......................
 LHS in loop = x indir= 1
 Rhs in loop: <u, 0>
 Normal instruction. 
 Inside restrictByLivness().......
 Inside forwardMerge.................
 Printing forward values: 
 ----------------------------------
 Inside EqualDataFlowValuesForward...............................
 Inside getPurelyGlobalComponentForward...........
 Inside getInitialisationValueForward 
 Inside performMeetForward..............
 Inside EqualDataFlowValuesForward...............................
 Inside getInitialisationValueForward 
 Inside performMeetForward..............
 Inside EqualDataFlowValuesForward...............................
 Inside getPurelyGlobalComponentForward...........
 Backwards Index: 1{  }
 Inside computeInFromOut...................
 Fetched LHS: x lhs indir: 1
 Rhs in loop: <u, 0>
 Inside fetchLhsIndex............. {  }
 Inside EqualDataFlowValuesBackward.................
 Inside getPurelyGlobalComponentBackward...............Time taken in Splitting Basic Block : 0 seconds

===================================[BACKWARD-0 ]===========================================
OUT: IN: 
===================================[BACKWARD-0 ]===========================================

===================================[BACKWARD-0 ]===========================================
OUT: IN: 
===================================[BACKWARD-0 ]===========================================

===================================[BACKWARD-0 ]===========================================
OUT: IN: 
===================================[BACKWARD-0 ]===========================================

===================================[BACKWARD-1 ]===========================================
OUT: IN: 
===================================[BACKWARD-1 ]===========================================

===================================[FORWARD-1 ]===========================================
TESTING
INFLOW VALUES: 
===================================[FORWARD-1 ]===========================================

===================================[FORWARD-1 ]===========================================
IN: OUT: 
===================================[FORWARD-1 ]===========================================

===================================[FORWARD-1 ]===========================================
IN: OUT: 
===================================[FORWARD-1 ]===========================================

===================================[FORWARD-0 ]===========================================
TESTING
INFLOW VALUES: 
===================================[FORWARD-0 ]===========================================

===================================[FORWARD-0 ]===========================================
IN: OUT: 
===================================[FORWARD-0 ]===========================================

===================================[FORWARD-2 ]===========================================
TESTING
INFLOW VALUES: 
===================================[FORWARD-2 ]===========================================

===================================[FORWARD-2 ]===========================================
IN: OUT: 
===================================[FORWARD-2 ]===========================================

===================================[FORWARD-2 ]===========================================
IN: OUT: 
===================================[FORWARD-2 ]===========================================

===================================[FORWARD-0 ]===========================================
TESTING
INFLOW VALUES: 
===================================[FORWARD-0 ]===========================================

===================================[FORWARD-0 ]===========================================
TESTING
INFLOW VALUES: 
===================================[FORWARD-0 ]===========================================

===================================[BACKWARD-2 ]===========================================
OUT: IN: 
===================================[BACKWARD-2 ]===========================================
Time taken by analysis: 0 seconds
Memory consume: 0.000000 MB
